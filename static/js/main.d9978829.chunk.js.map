{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","console","log","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9978829.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap:25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width:100vw;\n  height:100vh;\n  display: flex;\n  justify-content: center;\n  font-size:32px;\n`;\n\nexport default () =>\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width:100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size:12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height:180px;\n  background-size:cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin-bottom:5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom:3px;\n`;\n\nconst Year = styled.span`\n  font-size:10px;\n  color:rgba(255,255,255,.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")}\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconsole.log(Poster);\nconst Container = styled.div`\n  padding:20px;\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => (\n    <>\n        <Helmet>\n            <title>Movie | Nomflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader/>\n        ) : (\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming Movies\">\n                        {upcoming.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Movies\">\n                        {popular.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n            </Container>\n        )};\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"df2d4dee44d982356f572c174844005c\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"api\"\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: {results: nowPlaying}\n            } = await moviesApi.nowPlaying();\n            \n            const {\n                data: {results: upcoming}\n            } = await moviesApi.upcoming();\n            \n            const {\n                data: {results: popular}\n            } = await moviesApi.popular();\n\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find movie information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\n    <>\n        <Helmet>\n            <title>TV Shows | Nomflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Shows\">\n                        {popular.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"AiringToday\">\n                        {airingToday.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n            </Container>\n        )};\n    </>\n);\n\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport {tvApi} from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: {results: topRated}\n            } = await tvApi.topRated();\n\n            const {\n                data: {results: popular}\n            } = await tvApi.popular();\n\n            const {\n                data: {results: airingToday}\n            } = await tvApi.airingToday();\n\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find TV information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const {topRated, popular, airingToday, error, loading} = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm}) => (\n    <Container>\n        <Helmet>\n            <title>Search | Nomflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"Search Movies or TV Shows...\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? (\n            <Loader/>\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Show Results\">\n                        {tvResults.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n                {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n                    <Message text={`Nothing found for: ${searchTerm}`} color=\"#95a5a6\"/>\n                )}\n            </>\n        )}\n    </Container>\n);\n\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    error: PropTypes.string,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi, tvApi} from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const {\n            target: {value}\n        } = event;\n        this.setState({\n            searchTerm: value\n        })\n    };\n\n    searchByTerm = async () => {\n        const {searchTerm} = this.state;\n        try {\n            const {\n                data: {results: movieResults}\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: {results: tvResults}\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find results\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    };\n\n    render() {\n        const {movieResults, tvResults, loading, searchTerm, error, updateTerm} = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                loading={loading}\n                searchTerm={searchTerm}\n                handleSubmit={this.handleSubmit}\n                error={error}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color:white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    padding: 0 10px;\n    background-color:rgba(20, 20, 20, .8);\n    box-shadow: 0 1px 5px 2px rgba(0,0,0,.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n`;\n\nconst Item = styled.li`\n    width:50px;\n    height: 50px;\n    text-align:center;\n    border-bottom:3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition:border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({location: {pathname}}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height:100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: .5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: .7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({result, loading, error}) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader/>\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                    {result.original_title ? result.original_title : result.original_name}{\" \"}\n                    | Nomflix\n                </title>\n            </Helmet>\n            <Backdrop\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            />\n            <Content>\n                <Cover\n                    bgImage={\n                        result.poster_path\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            : require(\"../../assets/noPosterSmall.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        {result.original_title\n                            ? result.original_title\n                            : result.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result.release_date\n                                ? result.release_date.substring(0, 4)\n                                : result.first_air_date.substring(0, 4)}\n                        </Item>\n                        <Divider>∙</Divider>\n                        <Item>\n                            {result.runtime\n                                ? result.runtime\n                                : result.episode_run_time}\n                        </Item>\n                        <Divider>∙</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) =>\n                                    index === result.genres.length - 1\n                                        ? genre.name\n                                        : `${genre.name} / `\n                            )}\n                        </Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {moviesApi, tvApi} from \"api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: {pathname}\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: {id}\n            },\n            history: {push}\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({data: result} = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({data: result} = await tvApi.showDetail(parsedId));\n            }\n\n        } catch {\n            this.setState({error: \"Can't find anything.\"})\n        } finally {\n            this.setState({loading: false, result})\n        }\n    }\n\n    render() {\n        const {result, error, loading} = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/tv\" exact component={TV}/>\n            <Route path=\"/search\" component={Search}/>\n            <Route path=\"/movie/:id\" component={Detail}/>\n            <Route path=\"/show/:id\" component={Detail}/>\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n)","import {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n        font-size:14px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default GlobalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}